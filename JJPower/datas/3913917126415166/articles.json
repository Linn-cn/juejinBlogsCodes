[{"article_id": "6995346084579000351", "title": "small-spring 代码贡献者3个月，敢说精通Spring了，分享我的总结！", "digg_count": 9, "collect_count": 7, "comment_count": 2, "view_count": 592}, {"article_id": "6994594839945805861", "title": "单纯了！开发数据库路由，竟包含扰动函数、哈希散列、数据源切换一堆知识！", "digg_count": 24, "collect_count": 8, "comment_count": 2, "view_count": 711}, {"article_id": "6992378050084241444", "title": "面试官：展开说说，Spring中Bean对象是如何通过注解注入的？", "digg_count": 3, "collect_count": 1, "comment_count": 4, "view_count": 176}, {"article_id": "6991626917367693326", "title": "几百行代码写个Mybatis，原理搞的透透的！", "digg_count": 82, "collect_count": 124, "comment_count": 10, "view_count": 4285}, {"article_id": "6989785874070257678", "title": "就想搞明白，component-scan 是怎么把Bean都注册到Spring容器的！", "digg_count": 13, "collect_count": 7, "comment_count": 5, "view_count": 1984}, {"article_id": "6989013058035122207", "title": "CRUD搬砖两三年了，怎么阅读Spring源码？", "digg_count": 77, "collect_count": 105, "comment_count": 10, "view_count": 3427}, {"article_id": "6984591475300368398", "title": "【技术实践】基于Cglib动态代理，实现Spring的AOP核心功能！", "digg_count": 6, "collect_count": 1, "comment_count": 0, "view_count": 250}, {"article_id": "6982698200486379527", "title": "调研字节码插桩技术，用于系统监控设计和实现", "digg_count": 184, "collect_count": 224, "comment_count": 31, "view_count": 8211}, {"article_id": "6982361483044716551", "title": "高级码农设计的程序能解耦，是多么重要的一件事情！", "digg_count": 3, "collect_count": 5, "comment_count": 3, "view_count": 640}, {"article_id": "6981250819081388039", "title": "以一己之力，生抗美团技术博客！", "digg_count": 36, "collect_count": 35, "comment_count": 13, "view_count": 3830}, {"article_id": "6979787302818201631", "title": "【带你手撸Spring】没有哪个框架开发，能离开 Spring 的 FactoryBean！", "digg_count": 5, "collect_count": 3, "comment_count": 0, "view_count": 494}, {"article_id": "6979022477038518280", "title": "手写Spring，定义标记类型Aware接口，实现感知容器对象", "digg_count": 9, "collect_count": 11, "comment_count": 0, "view_count": 538}, {"article_id": "6977183910715195406", "title": "原来 spring.xml 配置的 destroy-method 需要用到向虚拟机注册钩子来实现！", "digg_count": 3, "collect_count": 0, "comment_count": 0, "view_count": 135}, {"article_id": "6976059361634287623", "title": "全网12万+粉丝，我被掘金签约了！| 2021 年中总结", "digg_count": 11, "collect_count": 1, "comment_count": 10, "view_count": 911}, {"article_id": "6974569107366608932", "title": "我想挑战下我的软肋，动手实现个Spring应用上下文！", "digg_count": 9, "collect_count": 7, "comment_count": 0, "view_count": 556}, {"article_id": "6971971355864465422", "title": "手撸Spring框架，设计与实现资源加载器，从Spring.xml解析和注册Bean对象", "digg_count": 7, "collect_count": 3, "comment_count": 0, "view_count": 503}, {"article_id": "6970857810821120037", "title": "给你一台服务器，你能把你写的代码部署到线上吗？", "digg_count": 3, "collect_count": 10, "comment_count": 10, "view_count": 884}, {"article_id": "6969373961440198669", "title": "在Spring Bean实例过程中，如何使用反射和递归处理的Bean属性填充？", "digg_count": 2, "collect_count": 1, "comment_count": 1, "view_count": 133}, {"article_id": "6968261140010762253", "title": "Spring 实例化方式有几种？为什么会用到 Cglib？", "digg_count": 16, "collect_count": 11, "comment_count": 1, "view_count": 1456}, {"article_id": "6966405613580451877", "title": "小傅哥，一个有“副业”的码农！", "digg_count": 46, "collect_count": 11, "comment_count": 19, "view_count": 3619}, {"article_id": "6965660725406760997", "title": "《Spring 手撸专栏》第 3 章：初显身手，运用设计模式，实现 Bean 的定义、注册、获取", "digg_count": 12, "collect_count": 10, "comment_count": 3, "view_count": 855}, {"article_id": "6964182815701205005", "title": "《Spring 手撸专栏》第 2 章：小试牛刀(让新手能懂)，实现一个简单的Bean容器", "digg_count": 11, "collect_count": 3, "comment_count": 5, "view_count": 726}, {"article_id": "6963080277551743012", "title": "《Spring 手撸专栏》| 开篇介绍，我要带新人撸 Spring 啦！", "digg_count": 11, "collect_count": 9, "comment_count": 3, "view_count": 761}, {"article_id": "6961580418608922638", "title": "给Java小白，整理一套能上手的简单编程算法题！！！", "digg_count": 6, "collect_count": 10, "comment_count": 0, "view_count": 746}, {"article_id": "6960793970263719944", "title": "大学毕业要写多少行代码，才能不用花钱培训就找到一份开发工作？", "digg_count": 19, "collect_count": 8, "comment_count": 2, "view_count": 2566}, {"article_id": "6960632497977688072", "title": "BATJTMD，大厂招聘，都怎么面Java程序员？", "digg_count": 15, "collect_count": 18, "comment_count": 3, "view_count": 1281}, {"article_id": "6958962738609520676", "title": "展开说说，Spring Bean IOC、AOP 循环依赖", "digg_count": 40, "collect_count": 68, "comment_count": 3, "view_count": 2499}, {"article_id": "6955336007839383588", "title": "久等了，网传“字节跳动总结的设计模式”，出版纸质书了【送书】！", "digg_count": 130, "collect_count": 50, "comment_count": 176, "view_count": 14444}, {"article_id": "6953773101632978957", "title": "一个Bug，让我发现了 Java 界的.AJ(锥)！", "digg_count": 47, "collect_count": 20, "comment_count": 16, "view_count": 6410}, {"article_id": "6952675449050759199", "title": "关于 Spring 中 getBean 的全流程源码解析", "digg_count": 32, "collect_count": 51, "comment_count": 5, "view_count": 1924}, {"article_id": "6950075481811058702", "title": "Cloudreve 自建云盘实践，我说了没人能限得了我的容量和速度！", "digg_count": 86, "collect_count": 84, "comment_count": 41, "view_count": 3851}, {"article_id": "6948592544578011172", "title": "Spring IOC 特性有哪些，不会读不懂源码！", "digg_count": 5, "collect_count": 6, "comment_count": 0, "view_count": 448}, {"article_id": "6946025852316418056", "title": "《SpringBoot 中间件设计和开发》| 对，小傅哥的掘金小册上线啦，这次教你造火箭！", "digg_count": 27, "collect_count": 24, "comment_count": 6, "view_count": 1739}, {"article_id": "6945619387550760991", "title": "你说，怎么把Bean塞到Spring容器？", "digg_count": 6, "collect_count": 4, "comment_count": 0, "view_count": 373}, {"article_id": "6944875536925917191", "title": "刚火了的中台转头就拆，一大波公司放不下又拿不起来！", "digg_count": 21, "collect_count": 13, "comment_count": 2, "view_count": 990}, {"article_id": "6943781852356280334", "title": "教小师妹学多线程，一个有深度的例子！", "digg_count": 12, "collect_count": 4, "comment_count": 4, "view_count": 414}, {"article_id": "6942287147022385159", "title": "爬虫大佬，把他总结的正则表达式使用给我了！", "digg_count": 12, "collect_count": 30, "comment_count": 1, "view_count": 406}, {"article_id": "6939714153674178596", "title": "看了 Spring 官网脚手架真香，也撸一个 SpringBoot DDD 微服务的脚手架！", "digg_count": 23, "collect_count": 31, "comment_count": 12, "view_count": 1190}, {"article_id": "6937089854488461326", "title": "面试现场：小伙伴的美团一面分享和分析[含答案]", "digg_count": 14, "collect_count": 34, "comment_count": 0, "view_count": 932}, {"article_id": "6935979260762914846", "title": "笔记整理：技术架构涵盖内容和演变过程总结", "digg_count": 9, "collect_count": 7, "comment_count": 1, "view_count": 170}, {"article_id": "6934513564774301704", "title": "工作两三年了，整不明白架构图都画啥？", "digg_count": 186, "collect_count": 348, "comment_count": 22, "view_count": 6690}, {"article_id": "6933010802601361421", "title": "半年招聘筛选了400+份简历，告诉你怎么写容易被撩！", "digg_count": 48, "collect_count": 104, "comment_count": 3, "view_count": 3158}, {"article_id": "6932272197499093005", "title": "方案设计：基于IDEA插件开发和字节码插桩技术，实现研发交付质量自动分析", "digg_count": 6, "collect_count": 2, "comment_count": 0, "view_count": 390}, {"article_id": "6931898210957033486", "title": "技术扫盲：关于低代码编程的可持续性交付设计和分析", "digg_count": 5, "collect_count": 6, "comment_count": 0, "view_count": 482}, {"article_id": "6924107089723785229", "title": "这一年，像踏码进货一样！", "digg_count": 35, "collect_count": 8, "comment_count": 19, "view_count": 2847}, {"article_id": "6922261808526917646", "title": "《Java 面经手册》PDF，全书5章29节，417页11.5万字，完稿&发版！", "digg_count": 5, "collect_count": 5, "comment_count": 0, "view_count": 351}, {"article_id": "6921505778671026189", "title": "每个程序员都该有个自己的博客，分享我的四种博客搭建教程！", "digg_count": 9, "collect_count": 25, "comment_count": 12, "view_count": 1308}, {"article_id": "6920020858375241741", "title": "JVM 判断对象已死，实践验证GC回收", "digg_count": 1, "collect_count": 2, "comment_count": 1, "view_count": 212}, {"article_id": "6918907811741040653", "title": "数学，离一个程序员有多近？", "digg_count": 15, "collect_count": 19, "comment_count": 4, "view_count": 1243}, {"article_id": "6917423370942300174", "title": "JVM故障处理工具，使用总结", "digg_count": 20, "collect_count": 42, "comment_count": 2, "view_count": 1179}, {"article_id": "6916309565084696584", "title": "握草，这些研发事故30%我都干过！", "digg_count": 13, "collect_count": 18, "comment_count": 0, "view_count": 1261}, {"article_id": "6914827659146952712", "title": "JVM内存模型总结，有各版本JDK对比、有元空间OOM监控案例、有Java版虚拟机，综合实践学习！", "digg_count": 17, "collect_count": 28, "comment_count": 7, "view_count": 639}, {"article_id": "6913716768796213261", "title": "谁说明天上线，这货压根不知道开发流程！", "digg_count": 68, "collect_count": 84, "comment_count": 7, "view_count": 5198}, {"article_id": "6912237797906579463", "title": "为了搞清楚类加载，竟然手撸JVM！", "digg_count": 7, "collect_count": 13, "comment_count": 2, "view_count": 517}, {"article_id": "6911137751697981453", "title": "2020年，作为技术号主的一年！| 掘金年度征文", "digg_count": 5, "collect_count": 0, "comment_count": 0, "view_count": 172}, {"article_id": "6909616066696052749", "title": "JDK、JRE、JVM，是什么关系？", "digg_count": 1, "collect_count": 0, "comment_count": 0, "view_count": 128}, {"article_id": "6908520038211256327", "title": "工作3年，看啥资料能月薪30K？", "digg_count": 46, "collect_count": 80, "comment_count": 8, "view_count": 4248}, {"article_id": "6907042693365383175", "title": "阿里不允许使用 Executors 创建线程池！那怎么使用，怎么监控？", "digg_count": 7, "collect_count": 6, "comment_count": 0, "view_count": 647}, {"article_id": "6905917604465115149", "title": "得物(毒)APP，8位抽奖码需求，这不就是产品给我留的数学作业！", "digg_count": 28, "collect_count": 21, "comment_count": 4, "view_count": 2274}, {"article_id": "6904436700395601934", "title": "手写线程池，对照学习ThreadPoolExecutor线程池实现原理！", "digg_count": 5, "collect_count": 8, "comment_count": 0, "view_count": 466}, {"article_id": "6903343019840241672", "title": "90%的程序员，都没用过多线程和锁，怎么成为架构师？", "digg_count": 20, "collect_count": 22, "comment_count": 8, "view_count": 1487}, {"article_id": "6901836916455391240", "title": "面经手册 · 第20篇《Thread 线程，状态转换、方法使用、原理分析》", "digg_count": 7, "collect_count": 13, "comment_count": 2, "view_count": 1201}, {"article_id": "6900735890671271943", "title": "北漂码农的我，把在大城市过成了屯子一样舒服，哈哈哈哈哈！", "digg_count": 2, "collect_count": 0, "comment_count": 0, "view_count": 130}, {"article_id": "6899244238664368135", "title": "Thread.start() ，它是怎么让线程启动的呢？", "digg_count": 5, "collect_count": 6, "comment_count": 1, "view_count": 844}, {"article_id": "6898133315581132807", "title": "鹿鼎记 · 韦小宝，丽春院、天地会、入皇宫等五个场景的恶搞版多线程锁学习！", "digg_count": 10, "collect_count": 8, "comment_count": 5, "view_count": 974}, {"article_id": "6896640602419658760", "title": "面经手册 · 第18篇《AQS 共享锁，Semaphore、CountDownLatch，听说数据库连接池可以用到！》", "digg_count": 15, "collect_count": 28, "comment_count": 0, "view_count": 1062}, {"article_id": "6895554395807711240", "title": "工作三年，你可能根本不知道大厂都面你什么！", "digg_count": 7, "collect_count": 8, "comment_count": 0, "view_count": 792}, {"article_id": "6894043391504416775", "title": "面经手册 · 第17篇《码农会锁，ReentrantLock之AQS原理分析和实践使用》", "digg_count": 2, "collect_count": 4, "comment_count": 0, "view_count": 210}, {"article_id": "6892929111405101069", "title": "大厂程序员必备的浏览器书签，我帮你整理好了。[下载导入浏览器]", "digg_count": 0, "collect_count": 1, "comment_count": 0, "view_count": 145}, {"article_id": "6891445090556837896", "title": "面经手册 · 第16篇《码农会锁，ReentrantLock之公平锁讲解和实现》", "digg_count": 0, "collect_count": 0, "comment_count": 0, "view_count": 108}, {"article_id": "6890698134742106119", "title": "刚毕业不久，接私活赚了2万块！", "digg_count": 6, "collect_count": 2, "comment_count": 5, "view_count": 914}, {"article_id": "6888859065946996750", "title": "码农会锁，synchronized 对象头结构(mark-word、Klass Pointer)、指针压缩、锁竞争，源码解毒、深度分析！", "digg_count": 17, "collect_count": 25, "comment_count": 3, "view_count": 770}, {"article_id": "6887747850723393544", "title": "碎片化的学习需要整理、沉淀，记录到博客是最好的方式！", "digg_count": 0, "collect_count": 0, "comment_count": 0, "view_count": 171}, {"article_id": "6886265000659419144", "title": "面经手册 · 第14篇《volatile 怎么实现的内存可见？没有 volatile 一定不可见吗？》", "digg_count": 1, "collect_count": 1, "comment_count": 0, "view_count": 253}, {"article_id": "6885151685669289998", "title": "UML类图还不懂？来看看这版乡村爱情类图，一把学会！", "digg_count": 22, "collect_count": 36, "comment_count": 3, "view_count": 1296}, {"article_id": "6883647726639120397", "title": "面经手册 · 第13篇《除了JDK、CGLIB，还有3种类代理方式？面试又卡住！》", "digg_count": 10, "collect_count": 19, "comment_count": 0, "view_count": 669}, {"article_id": "6882550846673027080", "title": "为了省钱，我用 1 天时间把 PHP 学完，装进 DDD 领域驱动设计里！", "digg_count": 3, "collect_count": 2, "comment_count": 0, "view_count": 442}, {"article_id": "6881781282557132813", "title": "坚持写技术博客一年能有多少收获！", "digg_count": 5, "collect_count": 0, "comment_count": 1, "view_count": 264}, {"article_id": "6879930814772183054", "title": "设计模式PDF下载了4.0万本！那，再肝一本《Java面经手册》吧！", "digg_count": 0, "collect_count": 0, "comment_count": 0, "view_count": 25}, {"article_id": "6877425959755055111", "title": "PPT画成这样，述职答辩还能过吗？", "digg_count": 14, "collect_count": 27, "comment_count": 3, "view_count": 4530}, {"article_id": "6875862851727785998", "title": "面试官，ThreadLocal 你要这么问，我就挂了！", "digg_count": 1, "collect_count": 3, "comment_count": 0, "view_count": 159}, {"article_id": "6874748277842149389", "title": "程序员为什么热衷于造轮子，升职加薪吗？", "digg_count": 28, "collect_count": 35, "comment_count": 9, "view_count": 2571}, {"article_id": "6873636101287608333", "title": "StringBuilder 比 String 快？空嘴白牙的，证据呢！", "digg_count": 4, "collect_count": 2, "comment_count": 0, "view_count": 383}, {"article_id": "6872526195687325704", "title": "一次代码评审，差点过不了试用期！", "digg_count": 77, "collect_count": 96, "comment_count": 13, "view_count": 10086}, {"article_id": "6871022261173354510", "title": "面经手册 · 第10篇《扫盲java.util.Collections工具包，学习排序、二分、洗牌、旋转算法》", "digg_count": 15, "collect_count": 21, "comment_count": 0, "view_count": 1960}, {"article_id": "6869556988096249870", "title": "握草，你竟然在代码里下毒！", "digg_count": 20, "collect_count": 12, "comment_count": 14, "view_count": 1938}, {"article_id": "6868069825718009870", "title": "面经手册 · 第9篇《队列是什么？什么是双端队列、延迟对列、阻塞队列，全是知识盲区！》", "digg_count": 6, "collect_count": 10, "comment_count": 0, "view_count": 516}, {"article_id": "6866948880651517960", "title": "面经手册 · 第8篇《LinkedList插入速度比ArrayList快？你确定吗？》", "digg_count": 2, "collect_count": 3, "comment_count": 2, "view_count": 471}, {"article_id": "6865837363138920455", "title": "面经手册 · 第7篇《ArrayList也这么多知识？一个指定位置插入就把谢飞机面晕了！》", "digg_count": 1, "collect_count": 2, "comment_count": 0, "view_count": 144}, {"article_id": "6864729576250015752", "title": "13年毕业，用两年时间从外包走进互联网大厂！", "digg_count": 0, "collect_count": 0, "comment_count": 0, "view_count": 188}, {"article_id": "6863970125515587591", "title": "面试28k职位，老乡面试官从HashCode到HashMap给我讲了一下午！「回家赶忙整理出1.6万字的面试材料」", "digg_count": 4, "collect_count": 5, "comment_count": 1, "view_count": 232}, {"article_id": "6863246409957638152", "title": "带着面试题学习红黑树操作原理，解析什么时候染色、怎么进行旋转、与2-3树有什么关联", "digg_count": 10, "collect_count": 16, "comment_count": 0, "view_count": 542}, {"article_id": "6861766887450574856", "title": "看图说话，揭秘2-3平衡树「红黑树的前身」", "digg_count": 0, "collect_count": 0, "comment_count": 0, "view_count": 173}, {"article_id": "6860300993066696711", "title": "面经手册 · 第4篇《HashMap数据插入、查找、删除、遍历，源码分析》", "digg_count": 0, "collect_count": 0, "comment_count": 0, "view_count": 42}, {"article_id": "6859131648898760717", "title": "面试这么撩准拿offer，HashMap深度学习，扰动函数、负载因子、扩容拆分，原理和实践验证，让懂了就是真的懂！", "digg_count": 35, "collect_count": 47, "comment_count": 13, "view_count": 2088}, {"article_id": "6857303939818536974", "title": "面经手册 · 第2篇《数据结构，HashCode为什么使用31作为乘数？》", "digg_count": 5, "collect_count": 6, "comment_count": 0, "view_count": 585}, {"article_id": "6855448117559590926", "title": "面经手册 · 第1篇《认知自己的技术栈盲区》", "digg_count": 1, "collect_count": 0, "comment_count": 0, "view_count": 43}, {"article_id": "6854899697656856589", "title": "面经手册 · 开篇《面试官都问我啥》", "digg_count": 9, "collect_count": 8, "comment_count": 1, "view_count": 928}, {"article_id": "6854573219987816456", "title": "12天，这本《重学Java设计模式》PDF书籍下载量9k，新增粉丝1400人，Github上全球推荐榜！", "digg_count": 5, "collect_count": 6, "comment_count": 0, "view_count": 459}, {"article_id": "6850037264849928206", "title": "《重学 Java 设计模式》PDF 出炉了 - 小傅哥，肝了50天写出18万字271页的实战编程资料", "digg_count": 206, "collect_count": 128, "comment_count": 41, "view_count": 5581}, {"article_id": "6847902224333570062", "title": "重学 Java 设计模式：实战访问者模式「模拟家长与校长，对学生和老师的不同视角信息的访问场景」", "digg_count": 3, "collect_count": 3, "comment_count": 0, "view_count": 289}, {"article_id": "6847037166367801352", "title": "重学 Java 设计模式：实战模版模式「模拟爬虫各类电商商品，生成营销推广海报场景」", "digg_count": 5, "collect_count": 7, "comment_count": 2, "view_count": 569}, {"article_id": "6847902217958064135", "title": "重学 Java 设计模式：实战策略模式「模拟多种营销类型优惠券，折扣金额计算策略场景」", "digg_count": 12, "collect_count": 19, "comment_count": 0, "view_count": 1104}, {"article_id": "6845166891409866760", "title": "重学 Java 设计模式：实战状态模式「模拟系统营销活动，状态流程审核发布上线场景」", "digg_count": 1, "collect_count": 8, "comment_count": 0, "view_count": 535}, {"article_id": "6844904205375782926", "title": "重学 Java 设计模式：实战观察者模式「模拟类似小客车指标摇号过程，监听消息通知用户中签场景」", "digg_count": 10, "collect_count": 12, "comment_count": 3, "view_count": 1079}, {"article_id": "6844904201579921421", "title": "重学 Java 设计模式：实战备忘录模式「模拟互联网系统上线过程中，配置文件回滚场景」", "digg_count": 0, "collect_count": 2, "comment_count": 0, "view_count": 233}, {"article_id": "6844904200644608007", "title": "重学 Java 设计模式：实战中介者模式「按照Mybatis原理手写ORM框架，给JDBC方式操作数据库增加中介者场景」", "digg_count": 11, "collect_count": 10, "comment_count": 1, "view_count": 757}, {"article_id": "6844904198820069383", "title": "重学 Java 设计模式：实战迭代器模式「模拟公司组织架构树结构关系，深度迭代遍历人员信息输出场景」", "digg_count": 3, "collect_count": 6, "comment_count": 0, "view_count": 388}, {"article_id": "6844904196685168653", "title": "重学 Java 设计模式：实战命令模式「模拟高档餐厅八大菜系，小二点单厨师烹饪场景」", "digg_count": 3, "collect_count": 2, "comment_count": 0, "view_count": 301}, {"article_id": "6844904194848063502", "title": "重学 Java 设计模式：实战责任链模式「模拟618电商大促期间，项目上线流程多级负责人审批场景」", "digg_count": 17, "collect_count": 30, "comment_count": 8, "view_count": 1530}, {"article_id": "6844904193229078535", "title": "重学 Java 设计模式：实战代理模式「模拟mybatis-spring中定义DAO接口，使用代理类方式操作数据库原理实现场景」", "digg_count": 2, "collect_count": 5, "comment_count": 0, "view_count": 427}, {"article_id": "6844904191266127886", "title": "重学 Java 设计模式：实战享元模式「基于Redis秒杀，提供活动与库存信息查询场景」", "digg_count": 6, "collect_count": 7, "comment_count": 0, "view_count": 518}, {"article_id": "6844904186706919437", "title": "重学 Java 设计模式：实战外观模式「基于SpringBoot开发门面模式中间件，统一控制接口白名单场景」", "digg_count": 5, "collect_count": 11, "comment_count": 5, "view_count": 928}, {"article_id": "6844904184936923149", "title": "重学 Java 设计模式：实战装饰器模式(SSO单点登录功能扩展，增加拦截用户访问方法范围场景)", "digg_count": 1, "collect_count": 5, "comment_count": 0, "view_count": 405}, {"article_id": "6844904182873341965", "title": "重学 Java 设计模式：实战组合模式(营销差异化人群发券，决策树引擎搭建场景)", "digg_count": 4, "collect_count": 10, "comment_count": 0, "view_count": 394}, {"article_id": "6844904180306411533", "title": "重学 Java 设计模式：实战桥接模式", "digg_count": 6, "collect_count": 22, "comment_count": 9, "view_count": 1136}, {"article_id": "6844904179274612750", "title": "重学 Java 设计模式：实战适配器模式", "digg_count": 3, "collect_count": 8, "comment_count": 0, "view_count": 925}, {"article_id": "6844904177533976583", "title": "重学 Java 设计模式：实战单例模式", "digg_count": 2, "collect_count": 5, "comment_count": 0, "view_count": 393}, {"article_id": "6844904174044332039", "title": "重学 Java 设计模式：实战原型模式", "digg_count": 10, "collect_count": 8, "comment_count": 0, "view_count": 491}, {"article_id": "6844904169602564110", "title": "重学 Java 设计模式：实战建造者模式", "digg_count": 7, "collect_count": 12, "comment_count": 6, "view_count": 893}, {"article_id": "6844904167715110920", "title": "重学 Java 设计模式：实战抽象工厂模式", "digg_count": 12, "collect_count": 32, "comment_count": 4, "view_count": 1162}, {"article_id": "6844904164515020807", "title": "重学 Java 设计模式：实战工厂方法模式", "digg_count": 4, "collect_count": 13, "comment_count": 8, "view_count": 462}, {"article_id": "6844904161562083342", "title": "11万字的字节码编程总结成PDF，asm、Javassist、bytebuddy、javaagent", "digg_count": 1, "collect_count": 0, "comment_count": 0, "view_count": 281}, {"article_id": "6844904159427166221", "title": "字节码编程，Byte-buddy篇三《使用委托实现抽象类方法并注入自定义注解信息》", "digg_count": 3, "collect_count": 5, "comment_count": 0, "view_count": 1042}, {"article_id": "6844904155102838792", "title": "字节码编程，Byte-buddy篇二《监控方法执行耗时动态获取出入参类型和值》", "digg_count": 3, "collect_count": 13, "comment_count": 3, "view_count": 1082}, {"article_id": "6844904153035046926", "title": "自建云盘存储PDF书籍支持在线预览和下载", "digg_count": 0, "collect_count": 0, "comment_count": 0, "view_count": 456}, {"article_id": "6844904151546069006", "title": "字节码编程，Byte-buddy篇一《基于Byte Buddy语法创建的第一个HelloWorld》", "digg_count": 4, "collect_count": 8, "comment_count": 0, "view_count": 425}, {"article_id": "6844904148547141646", "title": "汉字不能编程？别闹了，只是看着有点豪横！容易被开除！", "digg_count": 9, "collect_count": 2, "comment_count": 7, "view_count": 2482}, {"article_id": "6844904145581768717", "title": "讲道理，只要你是一个爱折腾的程序员，毕业找工作真的不需要再花钱培训！", "digg_count": 9, "collect_count": 3, "comment_count": 6, "view_count": 1514}, {"article_id": "6844904144755490829", "title": "字节码编程，Javassist篇五《使用Bytecode指令码生成含有自定义注解的类和方法》", "digg_count": 1, "collect_count": 0, "comment_count": 0, "view_count": 459}, {"article_id": "6844904142742241288", "title": "字节码编程，Javassist篇四《通过字节码插桩监控方法采集运行时入参出参和异常信息》", "digg_count": 2, "collect_count": 6, "comment_count": 0, "view_count": 314}, {"article_id": "6844904138052993031", "title": "《Netty+JavaFx实战：仿桌面版微信聊天》代码开源、上云部署、视频讲解，只为让你给点个Star！", "digg_count": 49, "collect_count": 82, "comment_count": 31, "view_count": 3865}, {"article_id": "6844904134336856077", "title": "字节码编程，Javassist篇三《使用Javassist在运行时重新加载类「替换原方法输出不一样的结果」》", "digg_count": 3, "collect_count": 6, "comment_count": 0, "view_count": 249}, {"article_id": "6844904133326012423", "title": "字节码编程，Javassist篇二《定义属性以及创建方法时多种入参和出参类型的使用》", "digg_count": 0, "collect_count": 3, "comment_count": 0, "view_count": 711}, {"article_id": "6844904132097097742", "title": "字节码编程，Javassist篇一《基于javassist的第一个案例helloworld》", "digg_count": 1, "collect_count": 13, "comment_count": 0, "view_count": 425}, {"article_id": "6844904129765048334", "title": "ASM字节码编程 | 用字节码增强技术给所有方法加上TryCatch捕获异常并输出", "digg_count": 4, "collect_count": 18, "comment_count": 10, "view_count": 1125}, {"article_id": "6844904121670041613", "title": "工作两年简历写成这样，谁要你呀！", "digg_count": 31, "collect_count": 80, "comment_count": 5, "view_count": 6398}, {"article_id": "6844904116624293901", "title": "ASM字节码编程 | JavaAgent+ASM字节码插桩采集方法名称以及入参和出参结果并记录方法耗时", "digg_count": 15, "collect_count": 14, "comment_count": 22, "view_count": 1522}, {"article_id": "6844904110693548045", "title": "我的大学四年到毕业工作5年的学习路线资源汇总", "digg_count": 10, "collect_count": 35, "comment_count": 0, "view_count": 2187}, {"article_id": "6844904105530376206", "title": "2020年3月27日，Github被攻击。我的GitPage博客也挂了，紧急修复之路，也教会你搭建 Jekyll 博客！", "digg_count": 1, "collect_count": 2, "comment_count": 0, "view_count": 755}, {"article_id": "6844904103156400135", "title": "ASM字节码编程 | 如果你只写CRUD，那这种技术栈你永远碰不到！！！", "digg_count": 10, "collect_count": 14, "comment_count": 3, "view_count": 1933}, {"article_id": "6844904096567148551", "title": "野路子搞算法 · 让算法可视化《leetcode03.无重复字符的最长子串》", "digg_count": 2, "collect_count": 2, "comment_count": 1, "view_count": 480}, {"article_id": "6844904089621364749", "title": "野路子搞算法《两数之和》，带着小白刷面试算法题", "digg_count": 4, "collect_count": 3, "comment_count": 0, "view_count": 536}, {"article_id": "6844904084877623303", "title": "这种场景你还写ifelse你跟孩子坐一桌去吧", "digg_count": 8, "collect_count": 11, "comment_count": 4, "view_count": 1655}, {"article_id": "6844904051990085645", "title": "源码分析 | 手写mybait-spring核心功能(干货好文一次学会工厂bean、类代理、bean注册的使用)", "digg_count": 7, "collect_count": 14, "comment_count": 0, "view_count": 574}, {"article_id": "6844904051264454663", "title": "用Java实现JVM第五章《指令集和解释器》", "digg_count": 0, "collect_count": 3, "comment_count": 0, "view_count": 958}, {"article_id": "6844904050744377351", "title": "似乎你总也记不住，byte取值范围是 -127~128 还是 -128~127", "digg_count": 5, "collect_count": 4, "comment_count": 1, "view_count": 1678}, {"article_id": "6844904047275687944", "title": "源码分析 | 基于jdbc实现一个Demo版的Mybatis", "digg_count": 6, "collect_count": 6, "comment_count": 0, "view_count": 492}, {"article_id": "6844904041294594055", "title": "源码分析 | 像盗墓一样分析Spring是怎么初始化xml并注册bean的", "digg_count": 6, "collect_count": 4, "comment_count": 0, "view_count": 431}, {"article_id": "6844904039516209160", "title": "源码分析 | 咋嘞？你的IDEA过期了吧！加个Jar包就破解了，为什么？", "digg_count": 58, "collect_count": 79, "comment_count": 16, "view_count": 7479}, {"article_id": "6844904038576685064", "title": "源码分析 | Spring定时任务Quartz执行全过程源码解读", "digg_count": 7, "collect_count": 12, "comment_count": 3, "view_count": 1871}, {"article_id": "6844904035783278605", "title": "架构框架搭建(二)《Dubbo分布式领域驱动设计架构框体》", "digg_count": 5, "collect_count": 6, "comment_count": 0, "view_count": 665}, {"article_id": "6844904031723192328", "title": "源码分析(1.4万字) | Mybatis接口没有实现类为什么可以执行增删改查", "digg_count": 10, "collect_count": 31, "comment_count": 4, "view_count": 2342}, {"article_id": "6844904029248552968", "title": "有点干货 | 应用服务之SSM整合：Spring4 + SpringMvc + Mybatis", "digg_count": 0, "collect_count": 6, "comment_count": 2, "view_count": 312}, {"article_id": "6844904025503055885", "title": "有点干货 | JDK、CGLIB动态代理使用以及源码分析", "digg_count": 3, "collect_count": 8, "comment_count": 0, "view_count": 879}, {"article_id": "6844904018821693454", "title": "有点干货 | Jdk1.8新特性实战篇(41个案例)", "digg_count": 33, "collect_count": 63, "comment_count": 6, "view_count": 2980}, {"article_id": "6844904016518840327", "title": "用Java实现JVM第十章《异常处理》", "digg_count": 3, "collect_count": 7, "comment_count": 1, "view_count": 202}, {"article_id": "6844904016518840333", "title": "用Java实现JVM第九章《本地方法调用》", "digg_count": 3, "collect_count": 4, "comment_count": 1, "view_count": 142}, {"article_id": "6844904016514646030", "title": "用Java实现JVM第八章《数组和字符串》", "digg_count": 2, "collect_count": 4, "comment_count": 1, "view_count": 118}, {"article_id": "6844904016514646029", "title": "用Java实现JVM第七章《方法调用和返回》", "digg_count": 2, "collect_count": 6, "comment_count": 1, "view_count": 178}, {"article_id": "6844904016510468110", "title": "用Java实现JVM第六章《类和对象》", "digg_count": 1, "collect_count": 0, "comment_count": 0, "view_count": 68}, {"article_id": "6844904016510451720", "title": "用Java实现JVM第四章《运行时数据区》", "digg_count": 2, "collect_count": 0, "comment_count": 0, "view_count": 344}, {"article_id": "6844904015944220686", "title": "开发基于SpringBoot的分布式任务中间件DcsSchedule(为开源贡献力量)", "digg_count": 7, "collect_count": 9, "comment_count": 6, "view_count": 362}, {"article_id": "6844904015742894088", "title": "发布Jar包到Maven仓库(为开发开源中间件做准备)", "digg_count": 3, "collect_count": 2, "comment_count": 0, "view_count": 414}, {"article_id": "6844903971170025485", "title": "用Java实现JVM第三章《解析class文件》附[classReader拆解]", "digg_count": 3, "collect_count": 3, "comment_count": 0, "view_count": 305}, {"article_id": "6844903708677914631", "title": "用Java实现JVM第三章《解析class文件》", "digg_count": 2, "collect_count": 2, "comment_count": 0, "view_count": 177}, {"article_id": "6844903708677898253", "title": "用Java实现JVM第二章《搜索class文件》", "digg_count": 3, "collect_count": 3, "comment_count": 0, "view_count": 162}, {"article_id": "6844904015642247176", "title": "用Java实现JVM第一章《命令行工具》", "digg_count": 6, "collect_count": 7, "comment_count": 0, "view_count": 793}, {"article_id": "6844904015306686478", "title": "elasticsearch-head插件安装", "digg_count": 2, "collect_count": 1, "comment_count": 0, "view_count": 643}, {"article_id": "6844904015302492174", "title": "windows环境下安装elasticsearch6.2.2", "digg_count": 1, "collect_count": 2, "comment_count": 0, "view_count": 625}, {"article_id": "6844904015302524941", "title": "Spring Boot 中间件开发(一)《服务治理中间件之统一白名单验证》", "digg_count": 5, "collect_count": 2, "comment_count": 0, "view_count": 592}, {"article_id": "6844904014664957965", "title": "Spring Cloud(九)《服务网关Zuul 动态路由与权限过滤器》", "digg_count": 3, "collect_count": 1, "comment_count": 0, "view_count": 679}, {"article_id": "6844904015176663047", "title": "Spring Cloud(八)《服务网关路由 Zuul1》", "digg_count": 2, "collect_count": 2, "comment_count": 0, "view_count": 384}, {"article_id": "6844904014660780039", "title": "Spring Cloud(七)《基于RabbitMQ消息总线方式刷新配置服务》", "digg_count": 2, "collect_count": 2, "comment_count": 0, "view_count": 184}, {"article_id": "6844904014660763655", "title": "Spring Cloud(六)《基于github webhook动态刷新服务配置》", "digg_count": 3, "collect_count": 2, "comment_count": 0, "view_count": 309}, {"article_id": "6844904014656749576", "title": "Spring Cloud(五)《Turbine 监控信息聚合展示 Hystrix》", "digg_count": 3, "collect_count": 1, "comment_count": 0, "view_count": 482}, {"article_id": "6844904014656585742", "title": "Spring Cloud(四)《服务响应性能成功率监控 Hystrix》", "digg_count": 1, "collect_count": 0, "comment_count": 0, "view_count": 63}, {"article_id": "6844904014656569352", "title": "Spring Cloud(三)《应用服务快速失败熔断降级保护 Hystrix》", "digg_count": 1, "collect_count": 1, "comment_count": 0, "view_count": 65}, {"article_id": "6844904014656569358", "title": "Spring Cloud(二)《服务提供与负载均衡调用 Eureka》", "digg_count": 1, "collect_count": 0, "comment_count": 0, "view_count": 50}, {"article_id": "6844904014652391432", "title": "Spring Cloud(一)《服务集群注册与发现 Eureka》", "digg_count": 1, "collect_count": 0, "comment_count": 0, "view_count": 53}, {"article_id": "6844904015155691534", "title": "Spring Cloud(零)《总有一偏概述告诉你SpringCloud是什么》", "digg_count": 4, "collect_count": 5, "comment_count": 0, "view_count": 392}, {"article_id": "6844904013876445197", "title": "基于jvmti定位java异常信息", "digg_count": 3, "collect_count": 3, "comment_count": 0, "view_count": 586}, {"article_id": "6844904013876428808", "title": "基于JavaAgent的全链路监控六《开发应用级监控》", "digg_count": 1, "collect_count": 1, "comment_count": 0, "view_count": 760}, {"article_id": "6844904013872250887", "title": "基于JavaAgent的全链路监控五《ThreadLocal链路追踪》", "digg_count": 1, "collect_count": 0, "comment_count": 0, "view_count": 128}, {"article_id": "6844904013872234503", "title": "基于JavaAgent的全链路监控四《JVM内存与GC信息》", "digg_count": 1, "collect_count": 1, "comment_count": 0, "view_count": 98}, {"article_id": "6844904013868056590", "title": "基于JavaAgent的全链路监控三《ByteBuddy操作监控方法字节码》", "digg_count": 1, "collect_count": 0, "comment_count": 0, "view_count": 467}, {"article_id": "6844904013868040206", "title": "基于JavaAgent的全链路监控二《通过字节码增加监控执行耗时》", "digg_count": 1, "collect_count": 1, "comment_count": 0, "view_count": 364}, {"article_id": "6844904013863845896", "title": "基于JavaAgent的全链路监控一《嗨！JavaAgent》", "digg_count": 1, "collect_count": 1, "comment_count": 0, "view_count": 787}, {"article_id": "6844904032721436680", "title": "bugstack虫洞栈 | netty4.1案例文章列表汇总，跟着案例学Netty", "digg_count": 2, "collect_count": 2, "comment_count": 0, "view_count": 88}, {"article_id": "6844904013679296520", "title": "netty案例，netty4.1源码分析篇六《Netty异步架构监听类Promise源码分析》", "digg_count": 2, "collect_count": 3, "comment_count": 0, "view_count": 517}, {"article_id": "6844904013679296526", "title": "netty案例，netty4.1源码分析篇五《一行简单的writeAndFlush都做了哪些事》", "digg_count": 1, "collect_count": 1, "comment_count": 0, "view_count": 608}, {"article_id": "6844904013675118605", "title": "netty案例，netty4.1源码分析篇四《ByteBuf的数据结构在使用方式中的剖析》", "digg_count": 2, "collect_count": 1, "comment_count": 0, "view_count": 261}, {"article_id": "6844904013675102221", "title": "netty案例，netty4.1源码分析篇三《Netty服务端初始化过程以及反射工厂的作用》", "digg_count": 1, "collect_count": 1, "comment_count": 0, "view_count": 457}, {"article_id": "6844904013670907912", "title": "netty案例，netty4.1源码分析篇二《ServerBootstrap配置与绑定启动》", "digg_count": 2, "collect_count": 2, "comment_count": 0, "view_count": 287}, {"article_id": "6844904013670924295", "title": "netty案例，netty4.1源码分析篇一《NioEventLoopGroup源码分析》", "digg_count": 2, "collect_count": 3, "comment_count": 0, "view_count": 1320}, {"article_id": "6844904013670907911", "title": "netty案例，netty4.1中级拓展篇十三《Netty基于SSL实现信息传输过程中双向加密验证》", "digg_count": 1, "collect_count": 0, "comment_count": 0, "view_count": 297}, {"article_id": "6844904013667041288", "title": "netty案例，netty4.1中级拓展篇十二《Netty流量整形数据流速率控制分析与实战》", "digg_count": 1, "collect_count": 1, "comment_count": 0, "view_count": 694}, {"article_id": "6844904013645758471", "title": "netty案例，netty4.1中级拓展篇十一《Netty基于ChunkedStream数据流切块传输》", "digg_count": 1, "collect_count": 0, "comment_count": 0, "view_count": 74}, {"article_id": "6844904013645742087", "title": "netty案例，netty4.1中级拓展篇十《Netty接收发送多种协议消息类型的通信处理方案》", "digg_count": 1, "collect_count": 0, "comment_count": 0, "view_count": 48}, {"article_id": "6844903495674363911", "title": "netty案例，netty4.1中级拓展篇八《Netty心跳服务与断线重连》", "digg_count": 2, "collect_count": 1, "comment_count": 0, "view_count": 70}, {"article_id": "6844904013641547789", "title": "netty案例，netty4.1中级拓展篇六《SpringBoot+Netty+Elasticsearch收集日志信息数据存储》", "digg_count": 1, "collect_count": 0, "comment_count": 0, "view_count": 56}, {"article_id": "6844904013633159181", "title": "netty案例，netty4.1中级拓展篇二《Netty使用Protobuf传输数据》", "digg_count": 1, "collect_count": 0, "comment_count": 0, "view_count": 62}, {"article_id": "6844904013633159176", "title": "netty案例，netty4.1中级拓展篇一《Netty与SpringBoot整合》", "digg_count": 2, "collect_count": 0, "comment_count": 0, "view_count": 87}, {"article_id": "6844904013612204039", "title": "netty案例，netty4.1基础入门篇十二《简单实现一个基于Netty搭建的Http服务》", "digg_count": 1, "collect_count": 0, "comment_count": 0, "view_count": 64}, {"article_id": "6844904013587021837", "title": "netty案例，netty4.1基础入门篇十《关于ChannelOutboundHandlerAdapter简单使用》", "digg_count": 1, "collect_count": 0, "comment_count": 0, "view_count": 278}, {"article_id": "6844904013587021831", "title": "netty案例，netty4.1基础入门篇八《NettyClient半包粘包处理、编码解码处理、收发数据方式》", "digg_count": 1, "collect_count": 0, "comment_count": 0, "view_count": 115}, {"article_id": "6844904013582991373", "title": "netty案例，netty4.1基础入门篇七《嗨！NettyClient》", "digg_count": 1, "collect_count": 0, "comment_count": 0, "view_count": 133}, {"article_id": "6844904013582827534", "title": "netty案例，netty4.1基础入门篇六《NettyServer群发消息》", "digg_count": 2, "collect_count": 3, "comment_count": 0, "view_count": 216}, {"article_id": "6844904013582827528", "title": "netty案例，netty4.1基础入门篇五《NettyServer字符串编码器》", "digg_count": 1, "collect_count": 1, "comment_count": 0, "view_count": 389}, {"article_id": "6844904013578633229", "title": "netty案例，netty4.1基础入门篇四《NettyServer收发数据》", "digg_count": 1, "collect_count": 0, "comment_count": 0, "view_count": 48}, {"article_id": "6844904013578633224", "title": "netty案例，netty4.1基础入门篇三《NettyServer字符串解码器》", "digg_count": 1, "collect_count": 0, "comment_count": 0, "view_count": 48}, {"article_id": "6844904013574455303", "title": "netty案例，netty4.1基础入门篇三《NettyServer字符串解码器》", "digg_count": 1, "collect_count": 0, "comment_count": 0, "view_count": 46}, {"article_id": "6844904013574438919", "title": "netty案例，netty4.1基础入门篇二《NettyServer接收数据》", "digg_count": 1, "collect_count": 0, "comment_count": 0, "view_count": 65}, {"article_id": "6844904013071122439", "title": "netty案例，netty4.1基础入门篇一《嗨！NettyServer》", "digg_count": 5, "collect_count": 1, "comment_count": 4, "view_count": 900}, {"article_id": "6844904013066928141", "title": "Spring Boot 中间件开发(一)《服务治理中间件之统一白名单验证》", "digg_count": 9, "collect_count": 9, "comment_count": 1, "view_count": 1531}, {"article_id": "6844904006913884168", "title": "netty案例，netty4.1基础入门篇零《初入JavaIO之门BIO、NIO、AIO实战练习》", "digg_count": 1, "collect_count": 2, "comment_count": 0, "view_count": 175}, {"article_id": "6844904006913884174", "title": "DDD专题案例二《领域层决策规则树服务设计》", "digg_count": 4, "collect_count": 6, "comment_count": 2, "view_count": 249}, {"article_id": "6844904006909853709", "title": "DDD专题案例一《初识领域驱动设计DDD落地》", "digg_count": 9, "collect_count": 25, "comment_count": 0, "view_count": 2222}, {"article_id": "6844904006905495565", "title": "[领域驱动设计实践]并不想吹牛皮，但！为了把Github博客粉丝转移到公众号，我干了！", "digg_count": 1, "collect_count": 0, "comment_count": 0, "view_count": 90}, {"article_id": "6844903880510144526", "title": "手写类似dubbo的rpc框架第三章《rpc框架》", "digg_count": 1, "collect_count": 0, "comment_count": 0, "view_count": 199}, {"article_id": "6844903880510144519", "title": "手写类似dubbo的rpc框架第二章《netty通信》", "digg_count": 1, "collect_count": 0, "comment_count": 0, "view_count": 267}, {"article_id": "6844903880505950215", "title": "手写类似dubbo的rpc框架第一章《自定义配置xml》", "digg_count": 1, "collect_count": 0, "comment_count": 0, "view_count": 104}]